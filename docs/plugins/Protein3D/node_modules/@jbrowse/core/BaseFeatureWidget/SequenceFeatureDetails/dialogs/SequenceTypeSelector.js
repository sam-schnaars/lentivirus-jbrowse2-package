"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const material_1 = require("@mui/material");
const mobx_react_1 = require("mobx-react");
const mui_1 = require("tss-react/mui");
const useStyles = (0, mui_1.makeStyles)()({
    formControl: {
        margin: 0,
        marginLeft: 4,
    },
});
const SequenceTypeSelector = (0, mobx_react_1.observer)(function ({ model, }) {
    const { classes } = useStyles();
    const { intronBp, upDownBp, mode, hasCDS, hasExonOrCDS } = model;
    return (react_1.default.createElement(material_1.FormControl, { className: classes.formControl },
        react_1.default.createElement(material_1.Select, { size: "small", value: mode, onChange: event => {
                model.setMode(event.target.value);
            } }, Object.entries({
            ...(hasCDS
                ? {
                    cds: 'CDS',
                }
                : {}),
            ...(hasCDS
                ? {
                    protein: 'Protein',
                }
                : {}),
            ...(hasExonOrCDS
                ? {
                    cdna: 'cDNA',
                }
                : {}),
            ...(hasExonOrCDS
                ? {
                    gene: 'Genomic w/ full introns',
                }
                : {}),
            ...(hasExonOrCDS
                ? {
                    gene_updownstream: `Genomic w/ full introns +/- ${upDownBp}bp up+down stream`,
                }
                : {}),
            ...(hasExonOrCDS
                ? {
                    gene_collapsed_intron: `Genomic w/ ${intronBp}bp intron`,
                }
                : {}),
            ...(hasExonOrCDS
                ? {
                    gene_updownstream_collapsed_intron: `Genomic w/ ${intronBp}bp intron +/- ${upDownBp}bp up+down stream `,
                }
                : {}),
            ...(!hasExonOrCDS
                ? {
                    genomic: 'Genomic',
                }
                : {}),
            ...(!hasExonOrCDS
                ? {
                    genomic_sequence_updownstream: `Genomic +/- ${upDownBp}bp up+down stream`,
                }
                : {}),
        }).map(([key, val]) => (react_1.default.createElement(material_1.MenuItem, { key: key, value: key }, val))))));
});
exports.default = SequenceTypeSelector;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const bgzf_filehandle_1 = require("@gmod/bgzf-filehandle");
// locals
const util_1 = require("../../util");
const io_1 = require("../../util/io");
const BaseAdapter_1 = require("../BaseAdapter");
class CytobandAdapter extends BaseAdapter_1.BaseAdapter {
    async getData() {
        const pm = this.pluginManager;
        const loc = this.getConf('cytobandLocation');
        if (loc.uri === '' || loc.uri === '/path/to/cytoband.txt.gz') {
            return [];
        }
        const buffer = await (0, io_1.openLocation)(loc, pm).readFile();
        const buf = (0, util_1.isGzip)(buffer) ? await (0, bgzf_filehandle_1.unzip)(buffer) : buffer;
        const text = new TextDecoder('utf8', { fatal: true }).decode(buf);
        return text
            .split(/\n|\r\n|\r/)
            .filter(f => !!f.trim())
            .map((line, i) => {
            const [refName, start, end, name, type] = line.split('\t');
            return new util_1.SimpleFeature({
                uniqueId: `${i}`,
                refName: refName,
                start: +start,
                end: +end,
                name: name,
                type: type,
            });
        });
    }
    freeResources( /* { region } */) { }
}
exports.default = CytobandAdapter;

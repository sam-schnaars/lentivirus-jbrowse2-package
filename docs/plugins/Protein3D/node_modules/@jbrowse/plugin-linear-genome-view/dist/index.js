"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.linearBasicDisplayModelFactory = exports.linearBasicDisplayConfigSchemaFactory = exports.totalHeight = exports.SVGRuler = exports.SVGTracks = exports.renderToSvg = exports.SearchBox = exports.RefNameAutocomplete = exports.TooLargeMessage = exports.FeatureDensityMixin = exports.TrackHeightMixin = exports.BaseLinearDisplayComponent = exports.BlockMsg = exports.BaseLinearDisplay = exports.baseLinearDisplayConfigSchema = exports.linearBareDisplayConfigSchemaFactory = void 0;
const Plugin_1 = __importDefault(require("@jbrowse/core/Plugin"));
const util_1 = require("@jbrowse/core/util");
const configuration_1 = require("@jbrowse/core/configuration");
const mobx_state_tree_1 = require("mobx-state-tree");
// icons
const LineStyle_1 = __importDefault(require("@mui/icons-material/LineStyle"));
// locals
const BaseLinearDisplay_1 = require("./BaseLinearDisplay");
const LinearBareDisplay_1 = __importDefault(require("./LinearBareDisplay"));
const LinearGenomeView_1 = __importStar(require("./LinearGenomeView"));
const LinearBasicDisplay_1 = __importDefault(require("./LinearBasicDisplay"));
const FeatureTrack_1 = __importDefault(require("./FeatureTrack"));
const BasicTrack_1 = __importDefault(require("./BasicTrack"));
const LaunchLinearGenomeView_1 = __importDefault(require("./LaunchLinearGenomeView"));
class LinearGenomeViewPlugin extends Plugin_1.default {
    constructor() {
        super(...arguments);
        this.name = 'LinearGenomeViewPlugin';
        this.exports = {
            BaseLinearDisplayComponent: BaseLinearDisplay_1.BaseLinearDisplayComponent,
            BaseLinearDisplay: BaseLinearDisplay_1.BaseLinearDisplay,
            baseLinearDisplayConfigSchema: BaseLinearDisplay_1.baseLinearDisplayConfigSchema,
            SearchBox: LinearGenomeView_1.SearchBox,
            ZoomControls: LinearGenomeView_1.ZoomControls,
            LinearGenomeView: LinearGenomeView_1.LinearGenomeView,
        };
        /**
         * #config LinearGenomeViewConfigSchema
         */
        this.configurationSchema = (0, configuration_1.ConfigurationSchema)('LinearGenomeViewConfigSchema', {
            /**
             * #slot configuration.LinearGenomeViewPlugin.trackLabels
             */
            trackLabels: {
                type: 'string',
                defaultValue: 'overlapping',
                model: mobx_state_tree_1.types.enumeration('trackLabelOptions', [
                    'offset',
                    'overlapping',
                    'hidden',
                ]),
            },
        });
    }
    install(pluginManager) {
        (0, FeatureTrack_1.default)(pluginManager);
        (0, BasicTrack_1.default)(pluginManager);
        (0, LinearBasicDisplay_1.default)(pluginManager);
        (0, LinearGenomeView_1.default)(pluginManager);
        (0, LinearBareDisplay_1.default)(pluginManager);
        (0, LaunchLinearGenomeView_1.default)(pluginManager);
    }
    configure(pluginManager) {
        if ((0, util_1.isAbstractMenuManager)(pluginManager.rootModel)) {
            pluginManager.rootModel.appendToSubMenu(['Add'], {
                label: 'Linear genome view',
                icon: LineStyle_1.default,
                onClick: (session) => {
                    session.addView('LinearGenomeView', {});
                },
            });
        }
    }
}
exports.default = LinearGenomeViewPlugin;
var LinearBareDisplay_2 = require("./LinearBareDisplay");
Object.defineProperty(exports, "linearBareDisplayConfigSchemaFactory", { enumerable: true, get: function () { return LinearBareDisplay_2.configSchemaFactory; } });
var BaseLinearDisplay_2 = require("./BaseLinearDisplay");
Object.defineProperty(exports, "baseLinearDisplayConfigSchema", { enumerable: true, get: function () { return BaseLinearDisplay_2.baseLinearDisplayConfigSchema; } });
Object.defineProperty(exports, "BaseLinearDisplay", { enumerable: true, get: function () { return BaseLinearDisplay_2.BaseLinearDisplay; } });
Object.defineProperty(exports, "BlockMsg", { enumerable: true, get: function () { return BaseLinearDisplay_2.BlockMsg; } });
Object.defineProperty(exports, "BaseLinearDisplayComponent", { enumerable: true, get: function () { return BaseLinearDisplay_2.BaseLinearDisplayComponent; } });
Object.defineProperty(exports, "TrackHeightMixin", { enumerable: true, get: function () { return BaseLinearDisplay_2.TrackHeightMixin; } });
Object.defineProperty(exports, "FeatureDensityMixin", { enumerable: true, get: function () { return BaseLinearDisplay_2.FeatureDensityMixin; } });
Object.defineProperty(exports, "TooLargeMessage", { enumerable: true, get: function () { return BaseLinearDisplay_2.TooLargeMessage; } });
var LinearGenomeView_2 = require("./LinearGenomeView");
Object.defineProperty(exports, "RefNameAutocomplete", { enumerable: true, get: function () { return LinearGenomeView_2.RefNameAutocomplete; } });
Object.defineProperty(exports, "SearchBox", { enumerable: true, get: function () { return LinearGenomeView_2.SearchBox; } });
var SVGLinearGenomeView_1 = require("./LinearGenomeView/svgcomponents/SVGLinearGenomeView");
Object.defineProperty(exports, "renderToSvg", { enumerable: true, get: function () { return SVGLinearGenomeView_1.renderToSvg; } });
Object.defineProperty(exports, "SVGTracks", { enumerable: true, get: function () { return SVGLinearGenomeView_1.SVGTracks; } });
Object.defineProperty(exports, "SVGRuler", { enumerable: true, get: function () { return SVGLinearGenomeView_1.SVGRuler; } });
var util_2 = require("./LinearGenomeView/svgcomponents/util");
Object.defineProperty(exports, "totalHeight", { enumerable: true, get: function () { return util_2.totalHeight; } });
var LinearBasicDisplay_2 = require("./LinearBasicDisplay");
Object.defineProperty(exports, "linearBasicDisplayConfigSchemaFactory", { enumerable: true, get: function () { return LinearBasicDisplay_2.configSchema; } });
Object.defineProperty(exports, "linearBasicDisplayModelFactory", { enumerable: true, get: function () { return LinearBasicDisplay_2.modelFactory; } });

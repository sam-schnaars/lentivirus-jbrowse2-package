"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const material_1 = require("@mui/material");
const mui_1 = require("tss-react/mui");
const mobx_react_1 = require("mobx-react");
const mobx_state_tree_1 = require("mobx-state-tree");
const ErrorBoundary_1 = require("@jbrowse/core/ui/ErrorBoundary");
const ui_1 = require("@jbrowse/core/ui");
const TrackLabelContainer_1 = __importDefault(require("./TrackLabelContainer"));
const TrackRenderingContainer_1 = __importDefault(require("./TrackRenderingContainer"));
const useStyles = (0, mui_1.makeStyles)()({
    root: {
        marginTop: 2,
    },
    resizeHandle: {
        height: 3,
        boxSizing: 'border-box',
        position: 'relative',
        zIndex: 2,
    },
});
const TrackContainer = (0, mobx_react_1.observer)(function ({ model, track, }) {
    const { classes } = useStyles();
    const display = track.displays[0];
    const { draggingTrackId, showTrackOutlines } = model;
    const ref = (0, react_1.useRef)(null);
    return (react_1.default.createElement(material_1.Paper, { ref: ref, className: classes.root, variant: showTrackOutlines ? 'outlined' : undefined, elevation: showTrackOutlines ? undefined : 0, onClick: event => {
            var _a;
            if (event.detail === 2 && !track.displays[0].featureIdUnderMouse) {
                const left = ((_a = ref.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect().left) || 0;
                model.zoomTo(model.bpPerPx / 2, event.clientX - left, true);
            }
        } },
        react_1.default.createElement(TrackLabelContainer_1.default, { track: track, view: model }),
        react_1.default.createElement(ErrorBoundary_1.ErrorBoundary, { FallbackComponent: e => react_1.default.createElement(ui_1.ErrorMessage, { error: e.error }) },
            react_1.default.createElement(TrackRenderingContainer_1.default, { model: model, track: track, onDragEnter: () => {
                    if ((0, mobx_state_tree_1.isAlive)(display) &&
                        draggingTrackId !== undefined &&
                        draggingTrackId !== display.id) {
                        model.moveTrack(draggingTrackId, track.id);
                    }
                } })),
        react_1.default.createElement(ui_1.ResizeHandle, { onDrag: display.resizeHeight, className: classes.resizeHandle })));
});
exports.default = TrackContainer;

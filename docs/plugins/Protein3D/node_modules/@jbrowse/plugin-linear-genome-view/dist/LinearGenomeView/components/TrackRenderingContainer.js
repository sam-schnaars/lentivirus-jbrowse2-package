"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const mui_1 = require("tss-react/mui");
const mobx_react_1 = require("mobx-react");
const configuration_1 = require("@jbrowse/core/configuration");
const ui_1 = require("@jbrowse/core/ui");
const useStyles = (0, mui_1.makeStyles)()({
    // aligns with block boundaries. check for example the breakpoint split view
    // demo to see if features align if wanting to change things
    renderingComponentContainer: {
        position: 'absolute',
        // -1 offset because of the 1px border of the Paper
        left: -1,
        height: '100%',
        width: '100%',
    },
    trackRenderingContainer: {
        overflowY: 'auto',
        overflowX: 'hidden',
        whiteSpace: 'nowrap',
        position: 'relative',
        background: 'none',
        zIndex: 2,
    },
});
const TrackRenderingContainer = (0, mobx_react_1.observer)(function ({ model, track, onDragEnter, }) {
    const { classes } = useStyles();
    const display = track.displays[0];
    const { height, RenderingComponent, DisplayBlurb } = display;
    const { trackRefs, id, scaleFactor } = model;
    const trackId = (0, configuration_1.getConf)(track, 'trackId');
    const ref = (0, react_1.useRef)(null);
    const minimized = track.minimized;
    (0, react_1.useEffect)(() => {
        if (ref.current) {
            trackRefs[trackId] = ref.current;
        }
        return () => {
            delete trackRefs[trackId];
        };
    }, [trackRefs, trackId]);
    return (react_1.default.createElement("div", { className: classes.trackRenderingContainer, style: {
            height: minimized ? 20 : height,
        }, onScroll: evt => display.setScrollTop(evt.currentTarget.scrollTop), onDragEnter: onDragEnter, "data-testid": `trackRenderingContainer-${id}-${trackId}` }, !minimized ? (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { ref: ref, className: classes.renderingComponentContainer, style: {
                transform: scaleFactor !== 1 ? `scaleX(${scaleFactor})` : undefined,
            } },
            react_1.default.createElement(react_1.Suspense, { fallback: react_1.default.createElement(ui_1.LoadingEllipses, null) },
                react_1.default.createElement(RenderingComponent, { model: display, onHorizontalScroll: model.horizontalScroll }))),
        DisplayBlurb ? (react_1.default.createElement("div", { style: {
                position: 'absolute',
                left: 0,
                top: display.height - 20,
            } },
            react_1.default.createElement(DisplayBlurb, { model: display }))) : null)) : null));
});
exports.default = TrackRenderingContainer;

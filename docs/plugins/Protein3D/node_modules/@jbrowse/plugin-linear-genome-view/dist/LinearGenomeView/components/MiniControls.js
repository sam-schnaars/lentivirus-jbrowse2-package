"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const mobx_react_1 = require("mobx-react");
const material_1 = require("@mui/material");
const CascadingMenuButton_1 = __importDefault(require("@jbrowse/core/ui/CascadingMenuButton"));
const mui_1 = require("tss-react/mui");
const util_1 = require("@jbrowse/core/util");
// icons
const ZoomIn_1 = __importDefault(require("@mui/icons-material/ZoomIn"));
const ZoomOut_1 = __importDefault(require("@mui/icons-material/ZoomOut"));
const KeyboardArrowDown_1 = __importDefault(require("@mui/icons-material/KeyboardArrowDown"));
const useStyles = (0, mui_1.makeStyles)()(theme => ({
    background: {
        position: 'absolute',
        right: 0,
        zIndex: 1001,
        background: theme.palette.background.paper,
    },
    focusedBackground: {
        background: (0, material_1.alpha)(theme.palette.secondary.light, 0.2),
    },
}));
const MiniControls = (0, mobx_react_1.observer)(function ({ model, }) {
    const { classes } = useStyles();
    const { id, bpPerPx, maxBpPerPx, minBpPerPx, scaleFactor, hideHeader } = model;
    const { focusedViewId } = (0, util_1.getSession)(model);
    return hideHeader ? (react_1.default.createElement(material_1.Paper, { className: classes.background },
        react_1.default.createElement(material_1.Paper, { className: focusedViewId === id ? classes.focusedBackground : undefined },
            react_1.default.createElement(CascadingMenuButton_1.default, { menuItems: model.menuItems() },
                react_1.default.createElement(KeyboardArrowDown_1.default, { fontSize: "small" })),
            react_1.default.createElement(material_1.IconButton, { "data-testid": "zoom_out", onClick: () => {
                    model.zoom(bpPerPx * 2);
                }, disabled: bpPerPx >= maxBpPerPx - 0.0001 || scaleFactor !== 1 },
                react_1.default.createElement(ZoomOut_1.default, { fontSize: "small" })),
            react_1.default.createElement(material_1.IconButton, { "data-testid": "zoom_in", onClick: () => {
                    model.zoom(bpPerPx / 2);
                }, disabled: bpPerPx <= minBpPerPx + 0.0001 || scaleFactor !== 1 },
                react_1.default.createElement(ZoomIn_1.default, { fontSize: "small" }))))) : null;
});
exports.default = MiniControls;

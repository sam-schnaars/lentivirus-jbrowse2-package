"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = RubberbandSpan;
const react_1 = __importStar(require("react"));
const mui_1 = require("tss-react/mui");
const material_1 = require("@mui/material");
const util_1 = require("@jbrowse/core/util");
const useStyles = (0, mui_1.makeStyles)()(theme => {
    const { tertiary } = theme.palette;
    const background = (0, material_1.alpha)(tertiary.light, 0.7);
    return {
        rubberband: {
            height: '100%',
            background,
            position: 'absolute',
            zIndex: 10,
            textAlign: 'center',
            overflow: 'hidden',
        },
        rubberbandControl: {
            cursor: 'crosshair',
            width: '100%',
            minHeight: 8,
        },
        rubberbandText: {
            color: tertiary.contrastText,
        },
        popover: {
            mouseEvents: 'none',
            cursor: 'crosshair',
        },
        paper: {
            paddingLeft: theme.spacing(1),
            paddingRight: theme.spacing(1),
        },
    };
});
function RubberbandSpan({ leftBpOffset, rightBpOffset, numOfBpSelected, left, width, }) {
    const ref = (0, react_1.useRef)(null);
    const { classes } = useStyles();
    return (react_1.default.createElement(react_1.default.Fragment, null,
        ref.current ? (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement(material_1.Popover, { className: classes.popover, classes: { paper: classes.paper }, open: true, anchorEl: ref.current, anchorOrigin: { vertical: 'top', horizontal: 'left' }, transformOrigin: { vertical: 'bottom', horizontal: 'right' }, keepMounted: true, disableRestoreFocus: true },
                react_1.default.createElement(material_1.Typography, null, (0, util_1.stringify)(leftBpOffset))),
            react_1.default.createElement(material_1.Popover, { className: classes.popover, classes: { paper: classes.paper }, open: true, anchorEl: ref.current, anchorOrigin: { vertical: 'top', horizontal: 'right' }, transformOrigin: { vertical: 'bottom', horizontal: 'left' }, keepMounted: true, disableRestoreFocus: true },
                react_1.default.createElement(material_1.Typography, null, (0, util_1.stringify)(rightBpOffset))))) : null,
        react_1.default.createElement("div", { ref: ref, className: classes.rubberband, style: { left, width } }, numOfBpSelected ? (react_1.default.createElement(material_1.Typography, { variant: "h6", className: classes.rubberbandText },
            (0, util_1.toLocale)(numOfBpSelected),
            " bp")) : null)));
}

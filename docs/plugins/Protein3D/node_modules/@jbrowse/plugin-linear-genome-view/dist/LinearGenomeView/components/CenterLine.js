"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const mui_1 = require("tss-react/mui");
const mobx_react_1 = require("mobx-react");
const useStyles = (0, mui_1.makeStyles)()(theme => ({
    centerLineContainer: {
        background: 'transparent',
        height: '100%',
        zIndex: 5, // above the track but under menu
        position: 'absolute',
        border: `1px ${theme.palette.action.active} dashed`,
        borderTop: 'none',
        borderBottom: 'none',
        pointerEvents: 'none',
    },
    centerLineText: {
        position: 'absolute',
        pointerEvents: 'none',
        whiteSpace: 'nowrap',
        fontWeight: 'bold',
    },
}));
const CenterLine = (0, mobx_react_1.observer)(function ({ model }) {
    const { bpPerPx, centerLineInfo, trackHeights, tracks, width } = model;
    const ref = (0, react_1.useRef)(null);
    const { classes } = useStyles();
    const startingPosition = width / 2;
    return tracks.length ? (react_1.default.createElement("div", { "data-testid": "centerline_container", className: classes.centerLineContainer, role: "presentation", ref: ref, style: {
            left: `${startingPosition}px`,
            width: Math.max(1 / bpPerPx, 1),
        } }, centerLineInfo && (react_1.default.createElement("div", { "data-testid": "centerline_text", className: classes.centerLineText, role: "presentation", style: {
            left: Math.max(1 / bpPerPx, 1) + 5,
            top: trackHeights,
        } },
        centerLineInfo.refName,
        ":",
        ' ',
        Math.max(Math.round(centerLineInfo.offset) + 1, 0))))) : null;
});
exports.default = CenterLine;

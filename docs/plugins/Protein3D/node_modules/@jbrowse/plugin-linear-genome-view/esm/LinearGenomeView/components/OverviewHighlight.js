import React from 'react';
import { observer } from 'mobx-react';
import { makeStyles } from 'tss-react/mui';
import { colord } from '@jbrowse/core/util/colord';
import { getSession, notEmpty } from '@jbrowse/core/util';
const useStyles = makeStyles()(theme => ({
    highlight: {
        height: '100%',
        position: 'absolute',
        background: colord(theme.palette.highlight.main).alpha(0.35).toRgbString(),
        borderLeft: `1px solid ${theme.palette.highlight.main}`,
        borderRight: `1px solid ${theme.palette.highlight.main}`,
    },
}));
const OverviewHighlight = observer(function OverviewHighlight({ model, overview, }) {
    const { classes } = useStyles();
    const { highlight, cytobandOffset } = model;
    const session = getSession(model);
    const { assemblyManager } = session;
    return highlight
        .map(r => {
        var _a;
        const asm = assemblyManager.get(r.assemblyName);
        const refName = (_a = asm === null || asm === void 0 ? void 0 : asm.getCanonicalRefName(r.refName)) !== null && _a !== void 0 ? _a : r.refName;
        const s = overview.bpToPx({
            ...r,
            refName,
            coord: r.start,
        });
        const e = overview.bpToPx({
            ...r,
            refName,
            coord: r.end,
        });
        return s !== undefined && e !== undefined
            ? {
                width: Math.abs(e - s),
                left: s + cytobandOffset,
            }
            : undefined;
    })
        .filter(notEmpty)
        .map(({ left, width }, idx) => (React.createElement("div", { 
        /* biome-ignore lint/suspicious/noArrayIndexKey: */
        key: `${left}_${width}_${idx}`, className: classes.highlight, style: {
            width: width,
            left: left,
        } })));
});
export default OverviewHighlight;
